name: Build

on:
  push:
    paths:
      - '**'
      - '!README.md'
      - '!LICENSE.txt'
      - '!docs/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-15, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install libxrandr-dev
          wget https://github.com/Kitware/CMake/releases/download/v4.0.1/cmake-4.0.1-linux-x86_64.tar.gz
          tar -xf cmake-4.0.1-linux-x86_64.tar.gz
          echo "$(pwd)/cmake-4.0.1-linux-x86_64/bin" >> $GITHUB_PATH

      - name: Restore cached GCC 15 build (Linux)
        if: runner.os == 'Linux'
        uses: actions/cache/restore@v4
        id: gcc-restore
        with:
          path: ${{ github.workspace }}/gcc-15
          key: ${{ runner.os }}-${{ runner.arch }}-gcc-15

      - name: Build GCC 15 when cache miss (Linux)
        if: runner.os == 'Linux' && steps.gcc-restore.outputs.cache-hit != 'true'
        run: |
          wget https://ftp.gnu.org/gnu/gcc/gcc-15.1.0/gcc-15.1.0.tar.xz
          tar -xf gcc-15.1.0.tar.xz
          cd gcc-15.1.0
          mkdir build
          cd build
          sudo apt install libgmp-dev libmpfr-dev libmpc-dev
          ../configure --prefix=${{ github.workspace }}/gcc-15 --disable-multilib --enable-languages=c,c++
          make -j$(nproc)
          make install

      - name: Cache GCC 15 build (Linux)
        if: runner.os == 'Linux' && steps.gcc-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/gcc-15
          key: ${{ runner.os }}-${{ runner.arch }}-gcc-15

      - name: Enable Developer Command Prompt (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Workaround for CMake cannot find __CMAKE::CXX23 target when using Homebrew libc++ (macOS)
        if: ${{ runner.os == 'macOS' }}
        run: sed -i '' 's|libc++.modules.json|../../c++/libc++.modules.json|g' /opt/homebrew/opt/cmake/share/cmake/Modules/Compiler/Clang-CXX-CXXImportStd.cmake # https://gitlab.kitware.com/cmake/cmake/-/issues/25965#note_1523575

      - name: Configure
        env:
          GCC_BUILD_DIR: ${{ github.workspace }}/gcc-15
        run: |
          mv .github/workflows/scripts/* .
          git apply vcpkg-deps.patch --whitespace=fix
          cmake --preset=${{ matrix.os }}

      - name: Build
        run: cmake --build build