name: Build

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: 'windows-latest', compiler: 'msvc', module: 'on' }
          - { os: 'windows-latest', compiler: 'msvc', module: 'off' }
          - { os: 'windows-latest', compiler: 'mingw', module: 'off' }
          - { os: 'macos-latest', compiler: 'apple-clang', module: 'off' }
          - { os: 'ubuntu-latest', compiler: 'gcc', module: 'off' }
          - { os: 'ubuntu-latest', compiler: 'clang-libcxx', module: 'on' }
          - { os: 'ubuntu-latest', compiler: 'clang-libcxx', module: 'off' }

    steps:
      - uses: actions/checkout@v5

      - name: Install Vulkan SDK
        uses: stripe2933/setup-vulkan-sdk@30a1c4f5464781f4559063b11e19b080a53b4411
        with:
          vulkan-query-version: latest
          vulkan-components: Vulkan-Headers, Vulkan-Loader, Glslang, SPIRV-Tools
          vulkan-use-cache: true

      - name: Install Build Dependencies (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get install xorg-dev libtool libltdl-dev

      - name: Install Build Dependencies (Ubuntu + Clang libc++)
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.compiler == 'clang-libcxx' }}
        run: sudo apt-get install libc++-dev libc++abi-dev

      - name: Enable Developer Command Prompt (Windows)
        if: ${{ matrix.os == 'windows-latest' && matrix.compiler == 'msvc' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure
        run: |
          mv .github/workflows/scripts/* .
          cmake --preset=${{ matrix.os }}-${{ matrix.compiler }} -DVKU_BUILD_MODULE=${{ matrix.module }}

      - name: Build
        run: cmake --build build --config release